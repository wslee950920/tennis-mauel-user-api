plugins {
	id 'org.springframework.boot' version '2.5.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "org.sonarqube" version "3.3"
	id 'org.asciidoctor.convert' version '1.5.8' // asciidoctor plugin
	id 'jacoco'
}

group = 'com.tennismauel'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets")) // 문서 저장위치
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	
	// https://mvnrepository.com/artifact/com.h2database/h2
	testImplementation group: 'com.h2database', name: 'h2', version: '1.4.200'
	// https://mvnrepository.com/artifact/mysql/mysql-connector-java
	implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.27'

	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc' // mock용
    testImplementation 'org.springframework.restdocs:spring-restdocs-webtestclient' // webtestclient용

    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
}

test {
	outputs.dir snippetsDir // 선언한 디렉토리에 생성
	useJUnitPlatform()
}

task unitTests(type:Test){
    useJUnitPlatform {
        includeTags "unit"
    }
}

task integrationTests(type:Test){
    useJUnitPlatform {
        includeTags "integration"
    }
}

sonarqube {
  properties {
    property "sonar.projectKey", "tennis-mauel-user-api"
	property 'sonar.coverage.jacoco.xmlReportPaths', 'build/reports/jacoco/test/jacocoTestReport.xml'
    property 'sonar.java.binaries', 'build/classes'
    property 'sonar.test.inclusions', '**/*Test.java'
	property 'sonar.exclusions', '**/test/**, **/resources/**'
  }
}

jacoco {
	 toolVersion = '0.8.7'
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'
            enabled = true

            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.30
            }

            limit {
                counter = 'METHOD'
                value = 'COVEREDRATIO'
                minimum = 0.30
            }
        }
    }
}

asciidoctor {
    attributes 'snippets': snippetsDir // adoc 파일 생성시 올바르게 include하기 위함
    inputs.dir snippetsDir 
    dependsOn test
}

bootJar {
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") { // gradle은 src/docs/asciidoc 에 메인 adoc생성!
        into 'static/docs' // asciidoctor로 만든 문서는 static/docs 디렉토리로.!
    }
}


task copyDocument(type: Copy) { // 생성된 docs 파일을 build시 static 아래에 docs로 복사!
    dependsOn bootJar

    from file("build/asciidoc/html5/")
    into file("src/main/resources/static/docs")
}

build {
    dependsOn copyDocument // build시 copy 실행
}